[{"/Users/eliottmorcillo/Documents/Projets/code-editor/src/index.js":"1","/Users/eliottmorcillo/Documents/Projets/code-editor/src/App.js":"2","/Users/eliottmorcillo/Documents/Projets/code-editor/src/components/Landing.js":"3","/Users/eliottmorcillo/Documents/Projets/code-editor/src/components/CodeEditorWindow.js":"4","/Users/eliottmorcillo/Documents/Projets/code-editor/src/components/Footer.js":"5","/Users/eliottmorcillo/Documents/Projets/code-editor/src/components/CustomInput.js":"6","/Users/eliottmorcillo/Documents/Projets/code-editor/src/components/OutputWindow.js":"7","/Users/eliottmorcillo/Documents/Projets/code-editor/src/components/LanguagesDropdown.js":"8","/Users/eliottmorcillo/Documents/Projets/code-editor/src/components/OutputDetails.js":"9","/Users/eliottmorcillo/Documents/Projets/code-editor/src/components/ThemeDropdown.js":"10","/Users/eliottmorcillo/Documents/Projets/code-editor/src/constants/languageOptions.js":"11","/Users/eliottmorcillo/Documents/Projets/code-editor/src/utils/general.js":"12","/Users/eliottmorcillo/Documents/Projets/code-editor/src/hooks/useKeyPress.js":"13","/Users/eliottmorcillo/Documents/Projets/code-editor/src/lib/defineTheme.js":"14","/Users/eliottmorcillo/Documents/Projets/code-editor/src/constants/customStyles.js":"15"},{"size":219,"mtime":1656852662000,"results":"16","hashOfConfig":"17"},{"size":127,"mtime":1656852662000,"results":"18","hashOfConfig":"17"},{"size":7154,"mtime":1675419251496,"results":"19","hashOfConfig":"17"},{"size":670,"mtime":1675378456641,"results":"20","hashOfConfig":"17"},{"size":4834,"mtime":1656852662000,"results":"21","hashOfConfig":"17"},{"size":565,"mtime":1675419129285,"results":"22","hashOfConfig":"17"},{"size":1327,"mtime":1675419147972,"results":"23","hashOfConfig":"17"},{"size":433,"mtime":1675377106610,"results":"24","hashOfConfig":"17"},{"size":847,"mtime":1675419307403,"results":"25","hashOfConfig":"17"},{"size":534,"mtime":1675377111875,"results":"26","hashOfConfig":"17"},{"size":4771,"mtime":1656852662000,"results":"27","hashOfConfig":"17"},{"size":69,"mtime":1656852662000,"results":"28","hashOfConfig":"17"},{"size":681,"mtime":1656852662000,"results":"29","hashOfConfig":"17"},{"size":1954,"mtime":1656852662000,"results":"30","hashOfConfig":"17"},{"size":1162,"mtime":1656852662000,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"8winvx",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/eliottmorcillo/Documents/Projets/code-editor/src/index.js",[],["64","65"],"/Users/eliottmorcillo/Documents/Projets/code-editor/src/App.js",[],"/Users/eliottmorcillo/Documents/Projets/code-editor/src/components/Landing.js",["66"],"import React, { useEffect, useState } from \"react\";\nimport CodeEditorWindow from \"./CodeEditorWindow\";\nimport axios from \"axios\";\nimport { classnames } from \"../utils/general\";\nimport { languageOptions } from \"../constants/languageOptions\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { defineTheme } from \"../lib/defineTheme\";\nimport useKeyPress from \"../hooks/useKeyPress\";\nimport OutputWindow from \"./OutputWindow\";\nimport CustomInput from \"./CustomInput\";\nimport OutputDetails from \"./OutputDetails\";\nimport ThemeDropdown from \"./ThemeDropdown\";\nimport LanguagesDropdown from \"./LanguagesDropdown\";\n\nconst javascriptDefault = `// Hello world\nconsole.log(\"Hello World !\");\n`;\n\nconst Landing = () => {\n  const [code, setCode] = useState(javascriptDefault);\n  const [customInput, setCustomInput] = useState(\"\");\n  const [outputDetails, setOutputDetails] = useState(null);\n  const [processing, setProcessing] = useState(null);\n  const [theme, setTheme] = useState(\"cobalt\");\n  const [language, setLanguage] = useState(languageOptions[0]);\n\n  const enterPress = useKeyPress(\"Enter\");\n  const ctrlPress = useKeyPress(\"Control\");\n\n  const onSelectChange = (sl) => {\n    console.log(\"selected Option...\", sl);\n    setLanguage(sl);\n  };\n\n  useEffect(() => {\n    if (enterPress && ctrlPress) {\n      console.log(\"enterPress\", enterPress);\n      console.log(\"ctrlPress\", ctrlPress);\n      handleCompile();\n    }\n  }, [ctrlPress, enterPress]);\n  const onChange = (action, data) => {\n    switch (action) {\n      case \"code\": {\n        setCode(data);\n        break;\n      }\n      default: {\n        console.warn(\"case not handled!\", action, data);\n      }\n    }\n  };\n  const handleCompile = () => {\n    setProcessing(true);\n    const formData = {\n      language_id: language.id,\n      // encode source code in base64\n      source_code: btoa(code),\n      stdin: btoa(customInput),\n    };\n    const options = {\n      method: \"POST\",\n      url: process.env.REACT_APP_RAPID_API_URL,\n      params: { base64_encoded: \"true\", fields: \"*\" },\n      headers: {\n        \"content-type\": \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"X-RapidAPI-Host\": process.env.REACT_APP_RAPID_API_HOST,\n        \"X-RapidAPI-Key\": process.env.REACT_APP_RAPID_API_KEY,\n      },\n      data: formData,\n    };\n\n    axios\n      .request(options)\n      .then(function (response) {\n        console.log(\"res.data\", response.data);\n        const token = response.data.token;\n        checkStatus(token);\n      })\n      .catch((err) => {\n        console.log(err);\n        let error = err.response ? err.response.data : err;\n        // get error status\n        let status = err.response.status;\n        console.log(\"status\", status);\n        if (status === 429) {\n          console.log(\"too many requests\", status);\n\n          showErrorToast(\n            `Quota of 100 requests exceeded for the Day! Please read the blog on freeCodeCamp to learn how to setup your own RAPID API Judge0!`,\n            10000\n          );\n        }\n        setProcessing(false);\n        console.log(\"catch block...\", error);\n      });\n  };\n\n  const checkStatus = async (token) => {\n    const options = {\n      method: \"GET\",\n      url: process.env.REACT_APP_RAPID_API_URL + \"/\" + token,\n      params: { base64_encoded: \"true\", fields: \"*\" },\n      headers: {\n        \"X-RapidAPI-Host\": process.env.REACT_APP_RAPID_API_HOST,\n        \"X-RapidAPI-Key\": process.env.REACT_APP_RAPID_API_KEY,\n      },\n    };\n    try {\n      let response = await axios.request(options);\n      let statusId = response.data.status?.id;\n\n      // Processed - we have a result\n      if (statusId === 1 || statusId === 2) {\n        // still processing\n        setTimeout(() => {\n          checkStatus(token);\n        }, 2000);\n        return;\n      } else {\n        setProcessing(false);\n        setOutputDetails(response.data);\n        showSuccessToast(`Compiled Successfully!`);\n        console.log(\"response.data\", response.data);\n        return;\n      }\n    } catch (err) {\n      console.log(\"err\", err);\n      setProcessing(false);\n      showErrorToast();\n    }\n  };\n\n  function handleThemeChange(th) {\n    const theme = th;\n    console.log(\"theme...\", theme);\n\n    if ([\"light\", \"vs-dark\"].includes(theme.value)) {\n      setTheme(theme);\n    } else {\n      defineTheme(theme.value).then((_) => setTheme(theme));\n    }\n  }\n  useEffect(() => {\n    defineTheme(\"oceanic-next\").then((_) =>\n      setTheme({ value: \"oceanic-next\", label: \"Oceanic Next\" })\n    );\n  }, []);\n\n  const showSuccessToast = (msg) => {\n    toast.success(msg || `Compiled Successfully!`, {\n      position: \"top-right\",\n      autoClose: 1000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  };\n  const showErrorToast = (msg, timer) => {\n    toast.error(msg || `Something went wrong! Please try again.`, {\n      position: \"top-right\",\n      autoClose: timer ? timer : 1000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  };\n\n  return (\n    <div className=\"h-screen w-screen bg-[#1A2B34]\">\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={2000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n\n      <div className=\"flex h-[40px] flex-row\">\n        <div className=\"px-4 py-2\">\n          <LanguagesDropdown onSelectChange={onSelectChange} />\n        </div>\n        <div className=\"px-4 py-2\">\n          <ThemeDropdown handleThemeChange={handleThemeChange} theme={theme} />\n        </div>\n      </div>\n      <div className=\"flex flex-col md:flex-row max-w-full md:space-x-4 h-[calc(100vh_-_40px)] flex-1 flex-grow items-start px-4 py-4\">\n        <div className=\"flex flex-col md:w-[70%] border rounded-md border-gray-700 w-full h-full justify-start items-end\">\n          <CodeEditorWindow\n            code={code}\n            onChange={onChange}\n            language={language?.value}\n            theme={theme.value}\n          />\n        </div>\n\n        <div className=\"right-container flex flex-shrink-0 md:w-[30%] w-full flex-col\">\n          <OutputWindow outputDetails={outputDetails} />\n          <div className=\"flex flex-col items-end\">\n            <CustomInput\n              customInput={customInput}\n              setCustomInput={setCustomInput}\n            />\n            <button\n              onClick={handleCompile}\n              disabled={!code}\n              className={classnames(\n                \"mt-2 border z-10 rounded-md px-4 py-2 hover:border-gray-500 transition duration-200 bg-white flex-shrink-0\",\n                !code ? \"opacity-50\" : \"\"\n              )}\n            >\n              {processing ? \"Processing...\" : \"Compile and Execute\"}\n            </button>\n          </div>\n          {outputDetails && <OutputDetails outputDetails={outputDetails} />}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Landing;\n","/Users/eliottmorcillo/Documents/Projets/code-editor/src/components/CodeEditorWindow.js",[],"/Users/eliottmorcillo/Documents/Projets/code-editor/src/components/Footer.js",[],"/Users/eliottmorcillo/Documents/Projets/code-editor/src/components/CustomInput.js",[],"/Users/eliottmorcillo/Documents/Projets/code-editor/src/components/OutputWindow.js",[],"/Users/eliottmorcillo/Documents/Projets/code-editor/src/components/LanguagesDropdown.js",[],"/Users/eliottmorcillo/Documents/Projets/code-editor/src/components/OutputDetails.js",[],"/Users/eliottmorcillo/Documents/Projets/code-editor/src/components/ThemeDropdown.js",[],"/Users/eliottmorcillo/Documents/Projets/code-editor/src/constants/languageOptions.js",[],"/Users/eliottmorcillo/Documents/Projets/code-editor/src/utils/general.js",[],"/Users/eliottmorcillo/Documents/Projets/code-editor/src/hooks/useKeyPress.js",[],"/Users/eliottmorcillo/Documents/Projets/code-editor/src/lib/defineTheme.js",[],"/Users/eliottmorcillo/Documents/Projets/code-editor/src/constants/customStyles.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":44,"column":6,"nodeType":"73","endLine":44,"endColumn":29,"suggestions":"74"},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleCompile'. Either include it or remove the dependency array.","ArrayExpression",["77"],"no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},"Update the dependencies array to be: [ctrlPress, enterPress, handleCompile]",{"range":"80","text":"81"},[1479,1502],"[ctrlPress, enterPress, handleCompile]"]